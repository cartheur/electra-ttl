{
  "draw2d": [
    {
      "type": "shape_designer.figure.PolyRect",
      "id": "6c335ec7-cfab-85f1-a3e2-8a5a188bc22e",
      "x": 7990,
      "y": 7960,
      "width": 20,
      "height": 20,
      "alpha": 1,
      "selectable": true,
      "draggable": true,
      "angle": 0,
      "userData": {
        "baseClass": "draw2d.SetFigure",
        "code": "/**\n * by 'Draw2D Shape Designer'\n *\n * Custom JS code to tweak the standard behaviour of the generated\n * shape. add your custome code and event handler here.\n *\n *\n */\ntestShape = testShape.extend({\n\n    init: function(attr, setter, getter){\n         this._super(attr, setter, getter);\n\n        this.bitCount = 4;\n        \n        this.setResizeable(false);\n        this.installEditPolicy(new draw2d.policy.figure.AntSelectionFeedbackPolicy());\n\n        this.on(\"click\",(emitter, event) => {\n            var h = emitter.getHeight();\n            var modh = h/this.bitCount;\n            var index = (event.relY/modh)|0;\n            var port = emitter.getOutputPort(index);\n            port.setValue(!port.getBooleanValue());\n            emitter.layerAttr(\"rect0\"+(index+1), {fill:port.getBooleanValue()?\"#C21B7A\":\"#FFFFFF\"});\n        });\n        this.on(\"added\",(emitter, event)=>{\n            this.getOutputPorts().each( (index, port) => {\n                this.layerAttr(\"rect0\"+(index+1), {fill:port.getBooleanValue()?\"#C21B7A\":\"#FFFFFF\"});\n            })\n        });\n    },\n    \n    calculate: function()\n    {\n    },\n\n  /**\n   * @method\n   * Return an objects with all important attributes for XML or JSON serialization\n   *\n   * @returns {Object}\n   */\n  getPersistentAttributes: function () {\n    return {\n      ...this._super(), \n      state: this.getOutputPorts().asArray().map( p => p.getValue() )\n    }\n  },\n\n  /**\n   * @method\n   * Read all attributes from the serialized properties and transfer them into the shape.\n   *\n   * @param {Object} memento\n   * @returns\n   */\n  setPersistentAttributes: function (memento) {\n    this._super(memento)\n\n    // and add all children of the JSON document.\n    //\n    $.each(memento.state,  (i, value) => {\n      this.getOutputPort(i)?.setValue(value)\n    })\n  }\n});",
        "name": "rect01",
        "markdown": "The High Low Array is a macro object for 4 toggle switches in a row. The physical counterpart here is the so-called DIP switch.",
        "type": "Output",
        "direction": 1
      },
      "cssClass": "shape_designer_figure_PolyRect",
      "ports": [],
      "bgColor": "rgba(255,255,255,1)",
      "color": "rgba(48,48,48,1)",
      "stroke": 1,
      "radius": 0,
      "dasharray": null,
      "vertices": [
        {
          "x": 8010,
          "y": 7980
        },
        {
          "x": 7990,
          "y": 7980
        },
        {
          "x": 7990,
          "y": 7960
        },
        {
          "x": 8010,
          "y": 7960
        }
      ],
      "blur": 0,
      "filters": [
        {
          "name": "shape_designer.filter.PositionFilter"
        },
        {
          "name": "shape_designer.filter.SizeFilter"
        },
        {
          "name": "shape_designer.filter.StrokeFilter"
        },
        {
          "name": "shape_designer.filter.FillColorFilter"
        }
      ]
    },
    {
      "type": "shape_designer.figure.PolyRect",
      "id": "b9805919-fa94-3684-0f3f-cd43469c82ae",
      "x": 7990,
      "y": 7980,
      "width": 20,
      "height": 20,
      "alpha": 1,
      "selectable": true,
      "draggable": true,
      "angle": 0,
      "userData": {
        "name": "rect02"
      },
      "cssClass": "shape_designer_figure_PolyRect",
      "ports": [],
      "bgColor": "rgba(255,255,255,1)",
      "color": "rgba(48,48,48,1)",
      "stroke": 1,
      "radius": 0,
      "dasharray": null,
      "vertices": [
        {
          "x": 8010,
          "y": 8000
        },
        {
          "x": 7990,
          "y": 8000
        },
        {
          "x": 7990,
          "y": 7980
        },
        {
          "x": 8010,
          "y": 7980
        }
      ],
      "blur": 0,
      "filters": [
        {
          "name": "shape_designer.filter.PositionFilter"
        },
        {
          "name": "shape_designer.filter.SizeFilter"
        },
        {
          "name": "shape_designer.filter.StrokeFilter"
        },
        {
          "name": "shape_designer.filter.FillColorFilter"
        }
      ]
    },
    {
      "type": "shape_designer.figure.PolyRect",
      "id": "82529c00-3171-9ddd-8af9-ef9e18edd426",
      "x": 7990,
      "y": 8000,
      "width": 20,
      "height": 20,
      "alpha": 1,
      "selectable": true,
      "draggable": true,
      "angle": 0,
      "userData": {
        "name": "rect03"
      },
      "cssClass": "shape_designer_figure_PolyRect",
      "ports": [],
      "bgColor": "rgba(255,255,255,1)",
      "color": "rgba(48,48,48,1)",
      "stroke": 1,
      "radius": 0,
      "dasharray": null,
      "vertices": [
        {
          "x": 8010,
          "y": 8020
        },
        {
          "x": 7990,
          "y": 8020
        },
        {
          "x": 7990,
          "y": 8000
        },
        {
          "x": 8010,
          "y": 8000
        }
      ],
      "blur": 0,
      "filters": [
        {
          "name": "shape_designer.filter.PositionFilter"
        },
        {
          "name": "shape_designer.filter.SizeFilter"
        },
        {
          "name": "shape_designer.filter.StrokeFilter"
        },
        {
          "name": "shape_designer.filter.FillColorFilter"
        }
      ]
    },
    {
      "type": "shape_designer.figure.PolyRect",
      "id": "bdc37923-873a-0f71-c82b-5a55c2608151",
      "x": 7990,
      "y": 8020,
      "width": 20,
      "height": 20,
      "alpha": 1,
      "selectable": true,
      "draggable": true,
      "angle": 0,
      "userData": {
        "name": "rect04"
      },
      "cssClass": "shape_designer_figure_PolyRect",
      "ports": [],
      "bgColor": "rgba(255,255,255,1)",
      "color": "rgba(48,48,48,1)",
      "stroke": 1,
      "radius": 0,
      "dasharray": null,
      "vertices": [
        {
          "x": 8010,
          "y": 8040
        },
        {
          "x": 7990,
          "y": 8040
        },
        {
          "x": 7990,
          "y": 8020
        },
        {
          "x": 8010,
          "y": 8020
        }
      ],
      "blur": 0,
      "filters": [
        {
          "name": "shape_designer.filter.PositionFilter"
        },
        {
          "name": "shape_designer.filter.SizeFilter"
        },
        {
          "name": "shape_designer.filter.StrokeFilter"
        },
        {
          "name": "shape_designer.filter.FillColorFilter"
        }
      ]
    },
    {
      "type": "shape_designer.figure.ExtPort",
      "id": "f4794033-1659-4dec-9b29-31774436bb39",
      "x": 8005.5,
      "y": 7964.4901,
      "width": 10,
      "height": 10,
      "alpha": 1,
      "selectable": true,
      "draggable": true,
      "angle": 0,
      "userData": {
        "name": "port01",
        "type": "Output",
        "direction": 1
      },
      "cssClass": "shape_designer_figure_ExtPort",
      "ports": [],
      "bgColor": "rgba(55,177,222,1)",
      "color": "rgba(27,27,27,1)",
      "stroke": 1,
      "dasharray": null,
      "filters": [
        {
          "name": "shape_designer.filter.PositionFilter"
        },
        {
          "name": "shape_designer.filter.FanoutFilter"
        },
        {
          "name": "shape_designer.filter.PortDirectionFilter"
        },
        {
          "name": "shape_designer.filter.PortTypeFilter"
        }
      ]
    },
    {
      "type": "shape_designer.figure.ExtPort",
      "id": "e5e8fff6-5626-2b88-44f1-1a55e4b467cd",
      "x": 8006,
      "y": 7985.5,
      "width": 10,
      "height": 10,
      "alpha": 1,
      "selectable": true,
      "draggable": true,
      "angle": 0,
      "userData": {
        "name": "port02",
        "type": "Output",
        "direction": 1
      },
      "cssClass": "shape_designer_figure_ExtPort",
      "ports": [],
      "bgColor": "rgba(55,177,222,1)",
      "color": "rgba(27,27,27,1)",
      "stroke": 1,
      "dasharray": null,
      "filters": [
        {
          "name": "shape_designer.filter.PositionFilter"
        },
        {
          "name": "shape_designer.filter.FanoutFilter"
        },
        {
          "name": "shape_designer.filter.PortDirectionFilter"
        },
        {
          "name": "shape_designer.filter.PortTypeFilter"
        }
      ]
    },
    {
      "type": "shape_designer.figure.ExtPort",
      "id": "578b7cce-0703-dd36-b0c2-6765f3390c22",
      "x": 8005.5,
      "y": 8005,
      "width": 10,
      "height": 10,
      "alpha": 1,
      "selectable": true,
      "draggable": true,
      "angle": 0,
      "userData": {
        "name": "port03",
        "type": "Output",
        "direction": 1
      },
      "cssClass": "shape_designer_figure_ExtPort",
      "ports": [],
      "bgColor": "rgba(55,177,222,1)",
      "color": "rgba(27,27,27,1)",
      "stroke": 1,
      "dasharray": null,
      "filters": [
        {
          "name": "shape_designer.filter.PositionFilter"
        },
        {
          "name": "shape_designer.filter.FanoutFilter"
        },
        {
          "name": "shape_designer.filter.PortDirectionFilter"
        },
        {
          "name": "shape_designer.filter.PortTypeFilter"
        }
      ]
    },
    {
      "type": "shape_designer.figure.ExtPort",
      "id": "3e88b3aa-290e-bd6d-9553-2fc7402d9a7f",
      "x": 8005.5,
      "y": 8025,
      "width": 10,
      "height": 10,
      "alpha": 1,
      "selectable": true,
      "draggable": true,
      "angle": 0,
      "userData": {
        "name": "port04",
        "type": "Output",
        "direction": 1
      },
      "cssClass": "shape_designer_figure_ExtPort",
      "ports": [],
      "bgColor": "rgba(55,177,222,1)",
      "color": "rgba(27,27,27,1)",
      "stroke": 1,
      "dasharray": null,
      "filters": [
        {
          "name": "shape_designer.filter.PositionFilter"
        },
        {
          "name": "shape_designer.filter.FanoutFilter"
        },
        {
          "name": "shape_designer.filter.PortDirectionFilter"
        },
        {
          "name": "shape_designer.filter.PortTypeFilter"
        }
      ]
    }
  ]
}